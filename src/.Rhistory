### draw the outline of the map and color the water blue
polypath(c(outline$x, NA, c(xbox, rev(xbox))),
c(outline$y, NA, rep(ybox, each=2)),
col="light blue", rule="evenodd")
### name the ticks with degree signs ("\U00B0")
axis(side=1, at=xaxis, labels=paste0(xaxis, "\U00B0"))
axis(side=2, at=yaxis, labels=paste0(yaxis, "\U00B0"),las=2)
### add a grid 'cause it looks noice
grid(col="darkgray")
### plot points
par(new=TRUE)
plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="", xaxt="n", yaxt="n") #empty
# plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="")
for (i in 1:nrow(df_farmer)){
x = df_farmer$Coordinates_E[i]
y = df_farmer$Coordinates_N[i]
r = eval(parse(text=paste0("df_farmer$", name_herbicide, "_SURVI")))[i]
if (!is.na(r)){
points(x, y, col="black", bg=color_gradient[round(r*ncolors)+1], pch=19)
### draw arrows and number labels
if (median(df_farmer$Coordinates_E)<144){
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-i)
} else {
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-i)
}
arrows(x0=x, y0=y, x1=x1, y1=y1, length=0.1)
text(x1, y1, lab=i, pos=2)
}
}
}
plot_heatmap(name_herbicide, df_farmer)
library(maps)
plot_heatmap = function(name_herbicide, df_farmer){
landscape_gradient = readRDS(paste0("../data/landscape_surfaces_gradient_data_", name_herbicide, ".rds"))
predx = landscape_gradient$predx
predy = landscape_gradient$predy
Z = landscape_gradient$Z
ncolors = 25 ### 25 is a nice number to see dicrete contour lines across the landscape methinks...
color_gradient = rev(colorRampPalette(c("#A50026","#D73027","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#D9EF8B","#A6D96A","#66BD63","#1A9850","#006837"))(ncolors))
### define x-y limits
dx=c(min(predx), max(predx))
dy=c(min(predy), max(predy))
xaxis = seq(round(min(predx)), round(max(predx)), 2)
yaxis = seq(round(min(predy))-2, round(max(predy))+2, 2)
### prepare the box enclosing the map
plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="Longitude", ylab="Latitdue", main=paste0(name_herbicide, " Resistance Gradient"), xaxt="n", yaxt="n") #empty
### overlay the heatmap
par(new=TRUE)
image(x=predx, y=predy, z=Z, col=color_gradient[round(min(Z)*ncolors):round(max(Z)*ncolors)], xlab="", ylab="", main="", asp=1, xaxt="n", yaxt="n")
### extract the bounding box of the map
outline = maps::map("world", plot=FALSE)
xrange = range(outline$x, na.rm=TRUE)
yrange = range(outline$y, na.rm=TRUE)
xbox = xrange + c(-2, 2)
ybox = yrange + c(-2, 2)
### draw the outline of the map and color the water blue
polypath(c(outline$x, NA, c(xbox, rev(xbox))),
c(outline$y, NA, rep(ybox, each=2)),
col="light blue", rule="evenodd")
### name the ticks with degree signs ("\U00B0")
axis(side=1, at=xaxis, labels=paste0(xaxis, "\U00B0"))
axis(side=2, at=yaxis, labels=paste0(yaxis, "\U00B0"),las=2)
### add a grid 'cause it looks noice
grid(col="darkgray")
### plot points
par(new=TRUE)
plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="", xaxt="n", yaxt="n") #empty
# plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="")
for (i in 1:nrow(df_farmer)){
x = df_farmer$Coordinates_E[i]
y = df_farmer$Coordinates_N[i]
r = eval(parse(text=paste0("df_farmer$", name_herbicide, "_SURVI")))[i]
if (!is.na(r)){
points(x, y, col="black", bg=color_gradient[round(r*ncolors)+1], pch=19)
### draw arrows and number labels
if (median(df_farmer$Coordinates_E)<144){
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-(i/2))
} else {
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-(i/2))
}
arrows(x0=x, y0=y, x1=x1, y1=y1, length=0.1)
text(x1, y1, lab=i, pos=2)
}
}
}
plot_heatmap(name_herbicide, df_farmer)
library(maps)
plot_heatmap = function(name_herbicide, df_farmer){
landscape_gradient = readRDS(paste0("../data/landscape_surfaces_gradient_data_", name_herbicide, ".rds"))
predx = landscape_gradient$predx
predy = landscape_gradient$predy
Z = landscape_gradient$Z
ncolors = 25 ### 25 is a nice number to see dicrete contour lines across the landscape methinks...
color_gradient = rev(colorRampPalette(c("#A50026","#D73027","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#D9EF8B","#A6D96A","#66BD63","#1A9850","#006837"))(ncolors))
### define x-y limits
dx=c(min(predx), max(predx))
dy=c(min(predy), max(predy))
xaxis = seq(round(min(predx)), round(max(predx)), 2)
yaxis = seq(round(min(predy))-2, round(max(predy))+2, 2)
### prepare the box enclosing the map
plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="Longitude", ylab="Latitdue", main=paste0(name_herbicide, " Resistance Gradient"), xaxt="n", yaxt="n") #empty
### overlay the heatmap
par(new=TRUE)
image(x=predx, y=predy, z=Z, col=color_gradient[round(min(Z)*ncolors):round(max(Z)*ncolors)], xlab="", ylab="", main="", asp=1, xaxt="n", yaxt="n")
### extract the bounding box of the map
outline = maps::map("world", plot=FALSE)
xrange = range(outline$x, na.rm=TRUE)
yrange = range(outline$y, na.rm=TRUE)
xbox = xrange + c(-2, 2)
ybox = yrange + c(-2, 2)
### draw the outline of the map and color the water blue
polypath(c(outline$x, NA, c(xbox, rev(xbox))),
c(outline$y, NA, rep(ybox, each=2)),
col="light blue", rule="evenodd")
### name the ticks with degree signs ("\U00B0")
axis(side=1, at=xaxis, labels=paste0(xaxis, "\U00B0"))
axis(side=2, at=yaxis, labels=paste0(yaxis, "\U00B0"),las=2)
### add a grid 'cause it looks noice
grid(col="darkgray")
### plot points
par(new=TRUE)
plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="", xaxt="n", yaxt="n") #empty
# plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="")
for (i in 1:nrow(df_farmer)){
x = df_farmer$Coordinates_E[i]
y = df_farmer$Coordinates_N[i]
r = eval(parse(text=paste0("df_farmer$", name_herbicide, "_SURVI")))[i]
if (!is.na(r)){
points(x, y, col="black", bg=color_gradient[round(r*ncolors)+1], pch=19)
### draw arrows and number labels
if (median(df_farmer$Coordinates_E)<144){
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-(i*0.75))
} else {
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-(i*0.75))
}
arrows(x0=x, y0=y, x1=x1, y1=y1, length=0.1)
text(x1, y1, lab=i, pos=2)
}
}
}
plot_heatmap(name_herbicide, df_farmer)
plot_hist = function(vec_resistance, name_herbicide, colour_herbicide, df_farmer){
obj_hist = hist(vec_resistance*100, col=rgb(0.5,0.5,0.5,alpha=0.6), nclass=10, bord=FALSE, main="", ylab="Number of Populations", xlab=paste0(name_herbicide, " Resistance (%)"))
grid()
x = eval(parse(text=paste0("df_farmer$", name_herbicide, "_SURVI*100")))
y = rev(seq(from=1, to=max(obj_hist$counts), length=10))[1:nrow(df_farmer)]
vec_labels = paste0(df_farmer$Location, ": ", df_farmer$Coordinates_N, "N, ", df_farmer$Coordinates_E, "E")
vec_percentiles = c()
for (i in 1:nrow(df_farmer)){
# i = 1
lines(x=c(x[i], x[i]), y=c(0, y[i]), lwd=2, col=colour_herbicide)
points(x=x[i], y=y[i], bg=colour_herbicide, pch=25)
text(x=x[i], y=y[i], lab=i, pos=4)
percentile = round(sum(vec_resistance<=y[i]/100)/length(vec_resistance)*100)
if ((percentile %% 10)==1){
percentile = paste0(percentile, "st")
} else if ((percentile %% 10)==2){
percentile = paste0(percentile, "nd")
} else if ((percentile %% 10)==3){
percentile = paste0(percentile, "rd")
} else {
percentile = paste0(percentile, "th")
}
vec_percentiles = c(vec_percentiles, paste0(vec_labels[i], " (", percentile, " percentile)"))
}
return(vec_percentiles)
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_heatmap_legend = function(color_gradient){
legend_x=seq(from=0,to=1, length=length(color_gradient))
legend_y=seq(from=0, to=100, length=length(color_gradient))
legend_z = matrix(rep(legend_x, times=length(color_gradient)), byrow=TRUE, nrow=length(color_gradient))
plot(x=c(0,100), y=c(0,100), type="n", xlab="", ylab="", xaxt="n", yaxt="n", main="")
par(new=TRUE)
image(x=legend_x, y=legend_y, z=legend_z, col=color_gradient, xlab="", ylab="", main="", xaxt="n", las=2)
mtext("Completely\nResistant", side=3, line=0.5, at=0.5, cex=0.5)
mtext("Completely\nSusceptible", side=1, line=1.5, at=0.5, cex=0.5)
}
plot_heatmap_legend = function(color_gradient){
legend_x=seq(from=0,to=1, length=length(color_gradient))
legend_y=seq(from=0, to=100, length=length(color_gradient))
legend_z = matrix(rep(legend_x, times=length(color_gradient)), byrow=TRUE, nrow=length(color_gradient))
plot(x=c(0,100), y=c(0,100), type="n", xlab="", ylab="", xaxt="n", yaxt="n", main="")
par(new=TRUE)
image(x=legend_x, y=legend_y, z=legend_z, col=color_gradient, xlab="", ylab="", main="", xaxt="n", las=2)
mtext("Completely\nResistant", side=3, line=0.5, at=0.5, cex=0.5)
mtext("Completely\nSusceptible", side=1, line=1.5, at=0.5, cex=0.5)
}
plot_heatmap_legend(color_gradient)
LAYOUT = matrix(c(rep(1,5), rep(3,5), 4, rep(2,5), rep(3,5), 4), nrow=2, byrow=TRUE)
LAYOUT
plot_legend = function(vec_percentiles, colour_herbicide){
plot(x=c(-1,1), y=c(-1,1), type="n", xaxt="n", yaxt="n", xlab="", ylab="")
legend(x="center", pch=25, pt.bg=colour_herbicide, col=colour_herbicide, legend=paste0(1:length(vec_percentiles), ": ", vec_percentiles))
}
plot_legend(vec_percentiles, colour_herbicide)
LAYOUT = matrix(c(rep(1,5), rep(3,5), 4, rep(2,5), rep(3,5), 4), nrow=2, byrow=TRUE)
layout(LAYOUT)
i = 2
j = 2
list_farmers = levels(dat$Farmer_Agronomist)
list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
name_farmer = list_farmers[i]
name_herbicide = list_herbicides[j]
colour_herbicide = list_colours[j]
df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
vec_resistance = vec_resistance[!is.na(vec_resistance)]
if (nrow(df_farmer)==0){
next
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend(vec_percentiles, colour_herbicide)
color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend(color_gradient)
LAYOUT = matrix(c(rep(1,3), rep(3,3), 4, rep(2,3), rep(3,3), 4), nrow=2, byrow=TRUE)
layout(LAYOUT)
i = 2
j = 2
list_farmers = levels(dat$Farmer_Agronomist)
list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
name_farmer = list_farmers[i]
name_herbicide = list_herbicides[j]
colour_herbicide = list_colours[j]
df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
vec_resistance = vec_resistance[!is.na(vec_resistance)]
if (nrow(df_farmer)==0){
next
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend(vec_percentiles, colour_herbicide)
color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend(color_gradient)
fname_data = "../data/combined_dataframe.csv"
dat = read.csv(fname_data, header=TRUE, na.string="NA")
### test
# i = 2
# j = 2
# list_farmers = levels(dat$Farmer_Agronomist)
# list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
# list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
# name_farmer = list_farmers[i]
# name_herbicide = list_herbicides[j]
# colour_herbicide = list_colours[j]
#
# df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
# df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
# df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
#
# vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
# vec_resistance = vec_resistance[!is.na(vec_resistance)]
#
# if (nrow(df_farmer)==0){
#   next
# }
plot_hist = function(vec_resistance, name_herbicide, colour_herbicide, df_farmer){
obj_hist = hist(vec_resistance*100, col=rgb(0.5,0.5,0.5,alpha=0.6), nclass=10, bord=FALSE, main="", ylab="Number of Populations", xlab=paste0(name_herbicide, " Resistance (%)"))
grid()
x = eval(parse(text=paste0("df_farmer$", name_herbicide, "_SURVI*100")))
y = rev(seq(from=1, to=max(obj_hist$counts), length=10))[1:nrow(df_farmer)]
vec_labels = paste0(df_farmer$Location, ": ", df_farmer$Coordinates_N, "N, ", df_farmer$Coordinates_E, "E")
vec_percentiles = c()
for (i in 1:nrow(df_farmer)){
# i = 1
lines(x=c(x[i], x[i]), y=c(0, y[i]), lwd=2, col=colour_herbicide)
points(x=x[i], y=y[i], bg=colour_herbicide, pch=25)
text(x=x[i], y=y[i], lab=i, pos=4)
percentile = round(sum(vec_resistance<=y[i]/100)/length(vec_resistance)*100)
if ((percentile %% 10)==1){
percentile = paste0(percentile, "st")
} else if ((percentile %% 10)==2){
percentile = paste0(percentile, "nd")
} else if ((percentile %% 10)==3){
percentile = paste0(percentile, "rd")
} else {
percentile = paste0(percentile, "th")
}
vec_percentiles = c(vec_percentiles, paste0(vec_labels[i], " (", percentile, " percentile)"))
}
return(vec_percentiles)
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_hist = function(vec_resistance, name_herbicide, colour_herbicide, df_farmer){
obj_hist = hist(vec_resistance*100, col=rgb(0.5,0.5,0.5,alpha=0.6), nclass=10, bord=FALSE, main="", ylab="Number of Populations", xlab=paste0(name_herbicide, " Resistance (%)"))
grid()
x = eval(parse(text=paste0("df_farmer$", name_herbicide, "_SURVI*100")))
y = rev(seq(from=1, to=max(obj_hist$counts), length=10))[1:nrow(df_farmer)]
vec_labels = paste0(df_farmer$Location, ": ", df_farmer$Coordinates_N, "N, ", df_farmer$Coordinates_E, "E")
vec_percentiles = c()
for (i in 1:nrow(df_farmer)){
# i = 1
lines(x=c(x[i], x[i]), y=c(0, y[i]), lwd=2, col=colour_herbicide)
points(x=x[i], y=y[i], bg=colour_herbicide, pch=25)
text(x=x[i], y=y[i], lab=i, pos=4)
percentile = round(sum(vec_resistance<=y[i]/100)/length(vec_resistance)*100)
if ((percentile %% 10)==1){
percentile = paste0(percentile, "st")
} else if ((percentile %% 10)==2){
percentile = paste0(percentile, "nd")
} else if ((percentile %% 10)==3){
percentile = paste0(percentile, "rd")
} else {
percentile = paste0(percentile, "th")
}
vec_percentiles = c(vec_percentiles, paste0(vec_labels[i], " (", percentile, " percentile)"))
}
return(vec_percentiles)
}
# vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend = function(vec_percentiles, colour_herbicide){
plot(x=c(-1,1), y=c(-1,1), type="n", xaxt="n", yaxt="n", xlab="", ylab="")
legend(x="center", pch=25, pt.bg=colour_herbicide, col=colour_herbicide, legend=paste0(1:length(vec_percentiles), ": ", vec_percentiles))
}
# plot_legend(vec_percentiles, colour_herbicide)
library(maps)
plot_heatmap = function(name_herbicide, df_farmer){
landscape_gradient = readRDS(paste0("../data/landscape_surfaces_gradient_data_", name_herbicide, ".rds"))
predx = landscape_gradient$predx
predy = landscape_gradient$predy
Z = landscape_gradient$Z
### colou specifications
ncolors = 25 ### 25 is a nice number to see dicrete contour lines across the landscape methinks...
color_gradient = rev(colorRampPalette(c("#A50026","#D73027","#F46D43","#FDAE61","#FEE08B","#FFFFBF","#D9EF8B","#A6D96A","#66BD63","#1A9850","#006837"))(ncolors))
### define x-y limits
dx=c(min(predx), max(predx))
dy=c(min(predy), max(predy))
xaxis = seq(round(min(predx)), round(max(predx)), 2)
yaxis = seq(round(min(predy))-2, round(max(predy))+2, 2)
### prepare the box enclosing the map
plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="Longitude", ylab="Latitdue", main=paste0(name_herbicide, " Resistance Gradient"), xaxt="n", yaxt="n") #empty
### overlay the heatmap
par(new=TRUE)
image(x=predx, y=predy, z=Z, col=color_gradient[round(min(Z)*ncolors):round(max(Z)*ncolors)], xlab="", ylab="", main="", asp=1, xaxt="n", yaxt="n")
### extract the bounding box of the map
outline = maps::map("world", plot=FALSE)
xrange = range(outline$x, na.rm=TRUE)
yrange = range(outline$y, na.rm=TRUE)
xbox = xrange + c(-2, 2)
ybox = yrange + c(-2, 2)
### draw the outline of the map and color the water blue
polypath(c(outline$x, NA, c(xbox, rev(xbox))),
c(outline$y, NA, rep(ybox, each=2)),
col="light blue", rule="evenodd")
### name the ticks with degree signs ("\U00B0")
axis(side=1, at=xaxis, labels=paste0(xaxis, "\U00B0"))
axis(side=2, at=yaxis, labels=paste0(yaxis, "\U00B0"),las=2)
### add a grid 'cause it looks noice
grid(col="darkgray")
### plot points
par(new=TRUE)
plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="", xaxt="n", yaxt="n") #empty
# plot(0, xlim=dx, ylim=dy, asp=1, type="n", xlab="", ylab="", main="")
for (i in 1:nrow(df_farmer)){
x = df_farmer$Coordinates_E[i]
y = df_farmer$Coordinates_N[i]
r = eval(parse(text=paste0("df_farmer$", name_herbicide, "_SURVI")))[i]
if (!is.na(r)){
points(x, y, col="black", bg=color_gradient[round(r*ncolors)+1], pch=19)
### draw arrows and number labels
if (median(df_farmer$Coordinates_E)<144){
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-(i*0.75))
} else {
x1 = x-i
y1 = y-(median(1:nrow(df_farmer))-(i*0.75))
}
arrows(x0=x, y0=y, x1=x1, y1=y1, length=0.1)
text(x1, y1, lab=i, pos=2)
}
}
return(color_gradient)
}
# color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend = function(color_gradient){
legend_x=seq(from=0,to=1, length=length(color_gradient))
legend_y=seq(from=0, to=100, length=length(color_gradient))
legend_z = matrix(rep(legend_x, times=length(color_gradient)), byrow=TRUE, nrow=length(color_gradient))
plot(x=c(0,100), y=c(0,100), type="n", xlab="", ylab="", xaxt="n", yaxt="n", main="")
par(new=TRUE)
image(x=legend_x, y=legend_y, z=legend_z, col=color_gradient, xlab="", ylab="", main="", xaxt="n", las=2)
mtext("Completely\nResistant", side=3, line=0.5, at=0.5, cex=0.5)
mtext("Completely\nSusceptible", side=1, line=1.5, at=0.5, cex=0.5)
}
# plot_heatmap_legend(color_gradient)
LAYOUT = matrix(c(rep(1,3), rep(3,3), 4, rep(2,3), rep(3,3), 4), nrow=2, byrow=TRUE)
layout(LAYOUT)
i = 2
j = 2
list_farmers = levels(dat$Farmer_Agronomist)
list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
name_farmer = list_farmers[i]
name_herbicide = list_herbicides[j]
colour_herbicide = list_colours[j]
df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
vec_resistance = vec_resistance[!is.na(vec_resistance)]
if (nrow(df_farmer)==0){
next
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend(vec_percentiles, colour_herbicide)
color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend(color_gradient)
LAYOUT = matrix(c(rep(1,4), rep(3,4), 4, rep(2,4), rep(3,4), 4), nrow=2, byrow=TRUE)
layout(LAYOUT)
i = 2
j = 2
list_farmers = levels(dat$Farmer_Agronomist)
list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
name_farmer = list_farmers[i]
name_herbicide = list_herbicides[j]
colour_herbicide = list_colours[j]
df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
vec_resistance = vec_resistance[!is.na(vec_resistance)]
if (nrow(df_farmer)==0){
next
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend(vec_percentiles, colour_herbicide)
color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend(color_gradient)
LAYOUT = matrix(c(rep(1,3), rep(3,3), 4, rep(2,3), rep(3,3), 4), nrow=2, byrow=TRUE)
layout(LAYOUT)
i = 2
j = 2
list_farmers = levels(dat$Farmer_Agronomist)
list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
name_farmer = list_farmers[i]
name_herbicide = list_herbicides[j]
colour_herbicide = list_colours[j]
df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
vec_resistance = vec_resistance[!is.na(vec_resistance)]
if (nrow(df_farmer)==0){
next
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend(vec_percentiles, colour_herbicide)
color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend(color_gradient)
plot_legend = function(vec_percentiles, colour_herbicide, cex.text=1){
plot(x=c(-1,1), y=c(-1,1), type="n", xaxt="n", yaxt="n", xlab="", ylab="")
legend(x="center", pch=25, pt.bg=colour_herbicide, col=colour_herbicide, legend=paste0(1:length(vec_percentiles), ": ", vec_percentiles), cex=cex.text)
}
# plot_legend(vec_percentiles, colour_herbicide)
LAYOUT = matrix(c(rep(1,3), rep(3,3), 4, rep(2,3), rep(3,3), 4), nrow=2, byrow=TRUE)
layout(LAYOUT)
i = 2
j = 2
list_farmers = levels(dat$Farmer_Agronomist)
list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
name_farmer = list_farmers[i]
name_herbicide = list_herbicides[j]
colour_herbicide = list_colours[j]
df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
vec_resistance = vec_resistance[!is.na(vec_resistance)]
if (nrow(df_farmer)==0){
next
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend(vec_percentiles, colour_herbicide, cex.text=0.5)
color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend(color_gradient)
LAYOUT = matrix(c(rep(1,3), rep(3,3), 4, rep(2,3), rep(3,3), 4), nrow=2, byrow=TRUE)
layout(LAYOUT)
i = 2
j = 2
list_farmers = levels(dat$Farmer_Agronomist)
list_herbicides = c("Clethodim", "Glyphosate", "Sulfometuron", "Terbuthylazine")
list_colours = c("#BF7EBE", "#FFBF7F", "#8BA5F2", "#FF7F7E", "#78C679")
name_farmer = list_farmers[i]
name_herbicide = list_herbicides[j]
colour_herbicide = list_colours[j]
df_farmer = dat[dat$Farmer_Agronomist==name_farmer, c(1:12, grep(name_herbicide, colnames(dat)))]
df_farmer = df_farmer[!is.na(df_farmer[, grepl("_SURVI", colnames(df_farmer))]), ]
df_farmer = df_farmer[order(df_farmer[, grepl("_SURVI", colnames(df_farmer))], decreasing=FALSE), ]
vec_resistance = dat[, grep(paste0(name_herbicide, "_SURVI"), colnames(dat))]
vec_resistance = vec_resistance[!is.na(vec_resistance)]
if (nrow(df_farmer)==0){
next
}
vec_percentiles = plot_hist(vec_resistance, name_herbicide, colour_herbicide, df_farmer)
plot_legend(vec_percentiles, colour_herbicide, cex.text=0.75)
color_gradient = plot_heatmap(name_herbicide, df_farmer)
plot_heatmap_legend(color_gradient)
